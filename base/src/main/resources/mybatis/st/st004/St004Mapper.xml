<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rmsoft.ams.seoul.st.st004.dao.St004Mapper">
    <select id="getStArrangeContainersResult" resultType="St00401VO" parameterType="St00401VO" statementType="PREPARED">
        SELECT
            S1.ARRANGE_CONTAINERS_RESULT_UUID as arrangeContainersResultUuid,
            S1.LOCATION_UUID as locationUuid,
            S1.CONTAINER_UUID as containerUuid,
            S2.CONTAINER_TYPE_UUID as containerTypeUuid,
            S1.STATUS_UUID as statusUuid,
            S1.ARRANGED_DATE as arrangedDate,
            S2.CONTAINER_NAME as containerName,
            S2.CONTROL_NUMBER as controlNumber,
            S1.DESCRIPTION as description,
            S1.NOTES as notes,
            (
              SELECT
                SUBSTR(SYS_CONNECT_BY_PATH(CONTAINER_NAME,' >> '),4) path
              FROM
                ST_CONTAINER S3
              WHERE S3.CONTAINER_UUID = S1.CONTAINER_UUID
              START WITH PARENT_CONTAINER_UUID IS NULL
              CONNECT BY PRIOR CONTAINER_UUID = PARENT_CONTAINER_UUID
            ) as containerPath,
            <include refid="Common.UserName"><property name="userUuid" value="S1.INSERT_UUID"/></include> as insertUuid,
            S1.INSERT_DATE as insertDate,
            <include refid="Common.UserName"><property name="userUuid" value="S1.UPDATE_UUID"/></include> as updateUuid,
            S1.UPDATE_DATE as updateDate,
        SUBSTR(SYS_CONNECT_BY_PATH(S1.ROWID,
        '.'),
        2 ,
        length(SYS_CONNECT_BY_PATH(S1.ROWID,
        '.'))) as orderKey1,
        S2.PARENT_CONTAINER_UUID as parentContainerUuid,
        NVL2(S2.PARENT_CONTAINER_UUID,'N','Y') as choiceYn
        FROM ST_ARRANGE_CONTAINERS_RESULT S1 INNER JOIN  ST_CONTAINER S2
        ON S1.CONTAINER_UUID = S2.CONTAINER_UUID
        AND S1.LOCATION_UUID = #{locationUuid}
        <where>
            <!--<if test="locationUuid != null">
                AND S1.LOCATION_UUID = #{locationUuid}
            </if>-->
            <if test="statusUuid != null">
                AND S1.STATUS_UUID = #{statusUuid}
            </if>
            <if test="containerType != null">
                AND S2.CONTAINER_TYPE_UUID = #{containerType}
            </if>
            <if test="containerName != null">
                AND S2.CONTAINER_NAME LIKE '%' || #{containerName} || '%'
            </if>
        </where>
        START WITH S2.PARENT_CONTAINER_UUID IS NULL
        CONNECT BY PRIOR S2.CONTAINER_UUID = S2.PARENT_CONTAINER_UUID
        ORDER SIBLINGS BY S2.ORDER_KEY
    </select>

    <select id="getLocationList" resultType="St00103VO" parameterType="St00103VO" statementType="PREPARED">
        SELECT
        LOCATION_UUID as locationUuid,
        STATUS_UUID as statusUuid,
        SHELF_UUID as shelfUuid,
        ROW_NO as rowNo,
        COLUMN_NO as columnNo,
        /*TOTAL_CONTAINER as totalContainer, 실제 배치된 container로 바꾼다*/
        DESCRIPTION as description,
        NOTES as notes,
        USE_YN as useYn,
        <include refid="Common.UserName"><property name="userUuid" value="INSERT_UUID"/></include> as insertUuid,
        INSERT_DATE as insertDate,
        <include refid="Common.UserName"><property name="userUuid" value="UPDATE_UUID"/></include> as updateUuid,
        UPDATE_DATE as updateDate,
        (SELECT COUNT(*)
        FROM ST_ARRANGE_CONTAINERS_RESULT STACR
        WHERE STACR.LOCATION_UUID = STL.LOCATION_UUID
        ) as totalContainer
        FROM
        ST_LOCATION STL
        <where>
            1=1
            <if test="statusUuid != null">
                AND STATUS_UUID = #{statusUuid}
            </if>
            <if test="rowNo != null">
                AND ROW_NO = #{rowNo}
            </if>
            <if test="columnNo != null">
                AND COLUMN_NO = #{columnNo}
            </if>
            <if test="useYn != null">
                AND USE_YN = #{useYn}
            </if>
            <if test="shelfUuid != null">
                AND SHELF_UUID = #{shelfUuid}
            </if>
            AND FC_AD_CODE_NM(STATUS_UUID) = 'Confirm'
        </where>
    </select>

    <select id="getSelectedContainerList" resultType="St00403VO" parameterType="St00403VO" statementType="PREPARED">
        SELECT
        containerUuid,
        statusUuid,
        containerName,
        containerTypeUuid,
        parentContainerUuid,
        controlNumber,
        provenance,
        creationStartDate,
        creationEndDate,
        orderKey,
        orderKey1,
        orderNo,
        parentContainerName,
        useYn,
        notes,
        description,
        insertUuid,
        insertDate,
        updateUuid,
        updateDate,
        recordCount,
        locationCount
        FROM
        (
        SELECT
        CONTAINER_UUID as containerUuid,
        STATUS_UUID as statusUuid,
        CONTAINER_NAME as containerName,
        CONTAINER_TYPE_UUID as containerTypeUuid,
        PARENT_CONTAINER_UUID as parentContainerUuid,
        CONTROL_NUMBER as controlNumber,
        PROVENANCE as provenance,
        TO_CHAR(TO_DATE(CREATION_START_DATE),'YYYY-MM-DD') as creationStartDate,
        TO_CHAR(TO_DATE(CREATION_END_DATE),'YYYY-MM-DD') as creationEndDate,
        SUBSTR(SYS_CONNECT_BY_PATH(ROWNUM, '.'), 2 , length(SYS_CONNECT_BY_PATH(ROWNUM, '.'))) as orderKey1,
        (
        SELECT CONTAINER_NAME
        FROM ST_CONTAINER I
        WHERE I.CONTAINER_UUID = A.PARENT_CONTAINER_UUID
        ) parentContainerName,
        ORDER_NO as orderNo,
        ORDER_KEY as orderKey,
        USE_YN as useYn,
        DESCRIPTION as description,
        NOTES as notes,
        <include refid="Common.UserName"><property name="userUuid" value="INSERT_UUID"/></include> as insertUuid,
        INSERT_DATE as insertDate,
        <include refid="Common.UserName"><property name="userUuid" value="UPDATE_UUID"/></include> as updateUuid,
        UPDATE_DATE as updateDate,
        (SELECT COUNT(*)
        FROM ST_ARRANGE_RECORDS_RESULT STARR
        WHERE STARR.CONTAINER_UUID = A.CONTAINER_UUID) as recordCount,
        (SELECT COUNT(*)
        FROM ST_ARRANGE_CONTAINERS_RESULT STARCR
        WHERE STARCR.CONTAINER_UUID = A.CONTAINER_UUID) as locationCount
        FROM
        ST_CONTAINER A
        START WITH PARENT_CONTAINER_UUID IS NULL
        CONNECT BY PRIOR CONTAINER_UUID = PARENT_CONTAINER_UUID
        ORDER SIBLINGS BY ORDER_KEY
        )

        <where>
            <if test="orderKey1 != null">
                (orderKey1 LIKE  #{orderKey1} || '.' || '%'
                OR orderKey1 =  #{orderKey1})
            </if>
            <if test="provenance != null">
                PROVENANCE = #{provenance}
            </if>
            <if test="parentContainerUuid != null">
                AND  PARENT_CONTAINER_UUID = #{parentContainerUuid}
            </if>
            <if test="containerName != null">
                AND UPPER(containerName) LIKE '%'||#{containerName}||'%'
            </if>
            <if test="statusUuid != null">
                AND statusUuid = #{statusUuid}
            </if>
            <if test="controlNumber != null">
                AND CONTROL_NUMBER = #{controlNumber}
            </if>
            <if test="containerTypeUuid != null">
                AND containerTypeUuid = #{containerTypeUuid}
            </if>
            <if test="useYn != null">
                AND useYn = #{useYn}
            </if>
            AND parentContainerUuid is null
            AND locationCount = 0
        </where>
    </select>
</mapper>