<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rmsoft.ams.seoul.st.st006.dao.St006Mapper">
    <select id="getStContainer" resultType="St00601VO" statementType="PREPARED">
        <![CDATA[
        select container.CONTAINER_UUID                                                                           containerUuid,
               container.STATUS_UUID                                                                              statusUuid,
               container.CONTAINER_NAME                                                                           containerName,
               container.CONTAINER_TYPE_UUID                                                                      containerTypeUuid,
               (SELECT con.CONTAINER_NAME FROM ST_CONTAINER con
                WHERE con.CONTAINER_UUID = container.PARENT_CONTAINER_UUID)                                       parentContainerName,
               container.PARENT_CONTAINER_UUID                                                                    parentContainerUuid,
               container.CONTROL_NUMBER                                                                           controlNumber,
               container.PROVENANCE                                                                               provenance,
               container.CREATION_START_DATE                                                                      creationStartDate,
               container.CREATION_END_DATE                                                                        creationEndDate,
               container.ORDER_NO                                                                                 orderNo,
               container.ORDER_KEY                                                                                orderKey,
               SUBSTR(SYS_CONNECT_BY_PATH(ROWNUM, '.'), 2, length(SYS_CONNECT_BY_PATH(ROWNUM, '.')))           as orderKey1,
               container.DESCRIPTION                                                                              description,
               container.NOTES                                                                                    notes,
               container.USE_YN                                                                                   useYn

        from ST_CONTAINER container
               INNER JOIN ST_ARRANGE_CONTAINERS_RESULT container_result
                 ON container.CONTAINER_UUID NOT IN (container_result.CONTAINER_UUID)
        START WITH container.PARENT_CONTAINER_UUID IS NULL
        CONNECT BY PRIOR container.CONTAINER_UUID = container.PARENT_CONTAINER_UUID
        ]]>
    </select>
    <select id="getSelectedItem" resultType="St00603VO" statementType="PREPARED">
        <![CDATA[
            SELECT
                   B.ITEM_UUID AS itemUuid,
                   B.TITLE AS itemTitle,
                   B.ITEM_CODE AS itemCode,
                   A.LEVEL_UUID as levelUuid,
                   A.AGGREGATION_CODE as code,
                   A.TITLE as title,
                   (SELECT LEVEL_NO FROM RC_LEVEL WHERE LEVEL_UUID = A.LEVEL_UUID) as "level",
                   LOWER (Z2.CODE_NAME) as type,
                   (SELECT CODE_NAME FROM AD_CODE_DETAIL WHERE CODE_DETAIL_UUID = A.PUBLISHED_STATUS_UUID) as publishedStatus,
                   AUTHOR                                                                                   as author,
                   DESCRIPTION_START_DATE                                                                   as startDate,
                   DESCRIPTION_END_DATE                                                                     as endDate,
                   A.AGGREGATION_UUID as aggregationUuid,
                   A.PUBLISHED_STATUS_UUID as publishedStatusUuid,



                   A.TYPE_UUID as typeUuid,

                   B.TYPE_UUID AS itemTypeUuid,
                   B.DESCRIPTION as description,
                   B.NOTES as notes,
                   B.AGGREGATION_UUID as parentAggregationUuid,
                   (
                   SELECT SYS_CONNECT_BY_PATH((
                                              SELECT TITLE FROM RC_AGGREGATION WHERE AGGREGATION_UUID = T1.AGGREGATION_UUID), ' > ')
                   FROM
                        (
                        SELECT CONNECT_BY_ROOT AGGREGATION_UUID AS ROOT, AGGREGATION_UUID, PARENT_AGGREGATION_UUID, TITLE
                        FROM RC_AGGREGATION
                        START WITH PARENT_AGGREGATION_UUID IS NULL
                        CONNECT BY PRIOR AGGREGATION_UUID = PARENT_AGGREGATION_UUID
                        ) T1
                   WHERE AGGREGATION_UUID = A.AGGREGATION_UUID
                     AND ROWNUM = 1
                   START WITH T1.PARENT_AGGREGATION_UUID IS NULL
                   CONNECT BY PRIOR T1.AGGREGATION_UUID = T1.PARENT_AGGREGATION_UUID
                   ) AS catPath
            FROM RC_AGGREGATION A,
                 AD_CODE_DETAIL Z2,

                 (
                 SELECT
                        item.AGGREGATION_UUID, item.ITEM_UUID, item.TITLE, item.ITEM_CODE, item.DESCRIPTION,item.NOTES,item.TYPE_UUID
                 FROM
                      RC_ITEM item
                      INNER JOIN ST_ARRANGE_RECORDS_RESULT record_result
                        ON record_result.CONTAINER_UUID = #{containerUuid}
                 WHERE item.AGGREGATION_UUID = record_result.AGGREGATION_UUID
                 UNION ALL
                 SELECT
                        item.AGGREGATION_UUID, item.ITEM_UUID, item.TITLE, item.ITEM_CODE, item.DESCRIPTION, item.NOTES, item.TYPE_UUID
                 FROM RC_ITEM item
                        INNER JOIN ST_ARRANGE_RECORDS_RESULT record_result
                          ON record_result.CONTAINER_UUID = #{containerUuid}
                 WHERE item.AGGREGATION_UUID IN
                       (
                       SELECT agg.AGGREGATION_UUID
                       FROM RC_AGGREGATION agg
                       START WITH PARENT_AGGREGATION_UUID = record_result.AGGREGATION_UUID
                       CONNECT BY PRIOR AGGREGATION_UUID = PARENT_AGGREGATION_UUID
                       )
                 ) B

            WHERE A.AGGREGATION_UUID = B.AGGREGATION_UUID AND B.ITEM_UUID NOT IN
                                                              (SELECT
                                                                      ITEM_UUID
                                                               FROM
                                                                    ST_ARRANGE_RECORDS_RESULT
                                                               WHERE
                                                                   CONTAINER_UUID = #{containerUuid}
                                                              )
              AND Z2.CODE_DETAIL_UUID(+) = B.TYPE_UUID
            ORDER BY catPath
    ]]>
     </select>
</mapper>
