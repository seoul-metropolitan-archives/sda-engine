<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rmsoft.ams.seoul.st.st006.dao.St006Mapper">
    <select id="getStContainer" resultType="St00601VO" statementType="PREPARED">

        SELECT *
        FROM (
                select container.CONTAINER_UUID                                                                 containerUuid,
                       container.STATUS_UUID                                                                    statusUuid,
                       container.CONTAINER_NAME                                                                 containerName,
                       container.CONTAINER_TYPE_UUID                                                            containerTypeUuid,
                       (SELECT con.CONTAINER_NAME
                        FROM ST_CONTAINER con
                        WHERE con.CONTAINER_UUID = container.PARENT_CONTAINER_UUID)                             parentContainerName,
                       container.PARENT_CONTAINER_UUID                                                          parentContainerUuid,
                       container.CONTROL_NUMBER                                                                 controlNumber,
                       container.PROVENANCE                                                                     provenance,
                       container.CREATION_START_DATE                                                            creationStartDate,
                       container.CREATION_END_DATE                                                              creationEndDate,
                       container.ORDER_NO                                                                       orderNo,
                       container.ORDER_KEY                                                                      orderKey,
                       SUBSTR(SYS_CONNECT_BY_PATH(ROWNUM, '.'), 2, length(SYS_CONNECT_BY_PATH(ROWNUM, '.'))) as orderKey1,
                       container.DESCRIPTION                                                                    description,
                       container.NOTES                                                                          notes,
                       container.USE_YN
                from ST_CONTAINER container
                <!-- container_result에 포함되지 않은 애를 찾아라. -->
                <!-- [0] location 에 할당되지 않은 root container 를 싹 가져옴  -->
                <!-- [1] [0]에서 가져온애들에 connect by 함  -->
                START WITH container.CONTAINER_UUID in (SELECT con.CONTAINER_UUID
                                                        FROM ST_CONTAINER con
                                                               LEFT JOIN ST_ARRANGE_CONTAINERS_RESULT container_result
                                                                 ON con.CONTAINER_UUID = container_result.CONTAINER_UUID
                                                        WHERE 1 = 1
                                                          AND container_result.container_uuid is NULL
                                                          AND con.PARENT_CONTAINER_UUID IS NULL)
                CONNECT BY PRIOR container.CONTAINER_UUID = container.PARENT_CONTAINER_UUID


        )
        <where>
            1 = 1
            <if test="provenance != null">
                AND provenance = #{provenance}
            </if>
            <if test="parentContainerUuid != null">
                AND  (parentContainerUuid = #{parentContainerUuid} OR containerUuid = #{parentContainerUuid}) -- 나 자신 도 포함 돼야 하므로 OR 이 들어감
            </if>
            <if test="containerName != null">
                AND UPPER(containerName) LIKE '%'||#{containerName}||'%'
            </if>
            <if test="statusUuid != null">
                AND statusUuid = #{statusUuid}
            </if>
            <if test="controlNumber != null">
                AND controlNumber = #{controlNumber}
            </if>
            <if test="containerTypeUuid != null">
                AND containerTypeUuid = #{containerTypeUuid}
            </if>
            <if test="creationStartDate != null">
                AND creationStartDate <![CDATA[>=]]> TO_DATE(#{creationStartDate},'yyyy-mm-dd')
            </if>
            <if test="creationEndDate != null">
                AND creationEndDate <![CDATA[<=]]> TO_DATE(#{creationEndDate},'yyyy-mm-dd')
            </if>
            <if test="useYn != null">
                AND useYn = #{useYn}
            </if>
        </where>

    </select>
    <select id="getSelectedItem" resultType="St00603VO" statementType="PREPARED">
        SELECT A.ARRANGE_RECORDS_RESULT_UUID                                 as arrangeRecordsResultUuid,
               A.STATUS_UUID                                                 as statusUuid,
               A.CONTAINER_UUID                                              as containerUuid,
               B.AGGREGATION_CODE                                            as code,
               A.AGGREGATION_UUID                                            as aggregationUuid,
               A.ITEM_UUID                                                   as itemUuid,
               B.TITLE                                                       as title,
               (SELECT LEVEL_NAME FROM RC_LEVEL WHERE LEVEL_UUID = B.LEVEL_UUID)                       as "level",

               B.TYPE_UUID                                                   as typeUuid,
               (SELECT CODE_NAME FROM AD_CODE_DETAIL WHERE CODE_DETAIL_UUID = B.PUBLISHED_STATUS_UUID) as publishedStatus,
               AUTHOR                                                                                  as author,
               DESCRIPTION_START_DATE                                                                  as startDate,
               DESCRIPTION_END_DATE                                                                    as endDate,
               A.DESCRIPTION                                                 as description,
               A.NOTES                                                       as notes,
               (SELECT SUBSTR(SYS_CONNECT_BY_PATH(TITLE,
                                                  ' >> '),
                              4) path
                FROM RC_AGGREGATION C
                WHERE A.AGGREGATION_UUID = C.AGGREGATION_UUID
                START WITH PARENT_AGGREGATION_UUID IS NULL
                CONNECT BY PRIOR AGGREGATION_UUID = PARENT_AGGREGATION_UUID) AS aggregationTree,
               (SELECT USER_NAME FROM AC_USER WHERE USER_UUID = A.INSERT_UUID
                                                AND ROWNUM = 1)              as insertUuid,
               A.INSERT_DATE                                                 as insertDate,
               (SELECT USER_NAME FROM AC_USER WHERE USER_UUID = A.UPDATE_UUID
                                                AND ROWNUM = 1)              as updateUuid,
               A.UPDATE_DATE                                                 as updateDate
        FROM ST_ARRANGE_RECORDS_RESULT A,
             RC_AGGREGATION B
        WHERE A.AGGREGATION_UUID = B.AGGREGATION_UUID
          AND A.CONTAINER_UUID = #{containerUuid}

     </select>
    <select id="getContainerTree" resultType="St00401VO" statementType="PREPARED">
        <![CDATA[
            select container.CONTAINER_UUID                                     containerUuid,
                   container.STATUS_UUID                                        statusUuid,
                   container.CONTAINER_NAME                                     containerName,
                   container.CONTAINER_TYPE_UUID                                containerTypeUuid,
                   (SELECT con.CONTAINER_NAME
                    FROM ST_CONTAINER con
                    WHERE con.CONTAINER_UUID = container.PARENT_CONTAINER_UUID) parentContainerName,
                   container.PARENT_CONTAINER_UUID                              parentContainerUuid,
                   container.CONTROL_NUMBER                                     controlNumber,
                   container.PROVENANCE                                         provenance,
                   container.CREATION_START_DATE                                creationStartDate,
                   container.CREATION_END_DATE                                  creationEndDate,
                   container.ORDER_NO                                           orderNo,
                   container.ORDER_KEY                                          orderKey,
                   SUBSTR(SYS_CONNECT_BY_PATH(ROWNUM,
                                              '.'),
                          2,
                          length(SYS_CONNECT_BY_PATH(ROWNUM,
                                                     '.'))) as                  orderKey1,
                   container.DESCRIPTION                                        description,
                   container.NOTES                                              notes,
                   container.USE_YN                                             useYn
            from ST_CONTAINER container

            START WITH container.CONTAINER_UUID = #{containerUuid}
            CONNECT BY PRIOR container.CONTAINER_UUID = container.PARENT_CONTAINER_UUID

    ]]>
     </select>
</mapper>
