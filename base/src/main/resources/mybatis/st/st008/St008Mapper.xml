<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rmsoft.ams.seoul.st.st008.dao.St008Mapper">
    <select id="getStTakeoutRequest" resultType="St00801VO" statementType="PREPARED">
        SELECT *
        FROM
            (select request.TAKEOUT_REQUEST_UUID                          AS takeoutRequestUuid,
                    REQUEST_NAME                                           AS requestName,
                    REQUEST_TYPE_UUID                                      AS requestTypeUuid,
                    REQUESTOR_UUID                                         AS requestorUuid,
                    (CASE WHEN REQUEST_TYPE_UUID = 'AF04136D-3508-4E1C-A85B-F1A1FEDDB607'
                                THEN ac_user.USER_NAME
                          ELSE OUTSOURCING_PERSON_NAME
                    END )                                                  AS requestorName,
                    (CASE WHEN REQUEST_TYPE_UUID = 'AF04136D-3508-4E1C-A85B-F1A1FEDDB607'
                                THEN (SELECT CODE_NAME FROM AD_CODE_DETAIL WHERE CODE_DETAIL_UUID = ac_user.ORGANIZATION_UUID)
                          ELSE OUTSOURCING_DEPARTMENT
                    END )                                                  AS userGroupName,
                    request.TAKEOUT_DATE                                    AS takeoutDate,
                    request.RETURN_DATE                                     AS returnDate,
                    request.RETURN_DUE_DATE                                 AS returnDueDate,
                    (SELECT CODE_NAME
                     FROM AD_CODE_DETAIL
                     WHERE CODE_DETAIL_UUID = request.STATUS_UUID)          AS status,
                    request.STATUS_UUID                                      AS statusUuid,
                    TAKEOUT_PROPOSE                                          AS takeoutPropose,
                    OUTSOURCING_DEPARTMENT                                   AS outsourcingDepartment,
                    OUTSOURCING_POSITION                                     AS outsourcingPosition,
                    OUTSOURCING_PERSON_NAME                                  AS outsourcingPersonName,
                    OUTSOURCING_PHONE                                        AS outsourcingPhone,
                    AUTH.AUTH_NAME

        FROM
              ST_TAKEOUT_REQUEST request INNER JOIN AC_USER ac_user ON ac_user.USER_UUID = request.REQUESTOR_UUID,
              (SELECT acd.CODE AS AUTH_NAME
               FROM AC_USER au LEFT JOIN AD_CODE_DETAIL acd ON au.USER_TYPE_UUID = acd.CODE_DETAIL_UUID
               WHERE au.USER_UUID = #{currentLoginUserUuid}) AUTH
        -- 여기는 아래의 getStTakeoutRecordResult query 와 같으므로 아래 변경되면 똑같이 적용 해 줘야됨
        -- code, title 이 필터링 되어야해서 이렇게 됨
        <if test="code != null || title != null">
               INNER JOIN
                    (select record_result.TAKEOUT_REQUEST_UUID
                     FROM   ST_TAKEOUT_RECORD_RESULT record_result
                                LEFT JOIN ST_ARRANGE_RECORDS_RESULT etc ON etc.AGGREGATION_UUID = record_result.AGGREGATION_UUID
                                LEFT JOIN ST_ARRANGE_CONTAINERS_RESULT acr ON acr.CONTAINER_UUID = etc.CONTAINER_UUID
                                LEFT JOIN ST_LOCATION location ON location.LOCATION_UUID = acr.LOCATION_UUID
                                LEFT JOIN ST_CONTAINER container ON container.CONTAINER_UUID = etc.CONTAINER_UUID
                                LEFT JOIN ST_SHELF shelf ON shelf.SHELF_UUID = location.SHELF_UUID
                                LEFT JOIN ST_REPOSITORY repository ON repository.REPOSITORY_UUID = shelf.REPOSITORY_UUID
                                INNER JOIN (SELECT    AGGREGATION_UUID                                      AS uuid,
                                                        1                                                     AS orderNo,
                                                        (SELECT CODE_NAME
                                                        FROM AD_CODE_DETAIL
                                                        WHERE CODE_DETAIL_UUID = Z1.PUBLISHED_STATUS_UUID)   AS publishedStatus,
                                                        AGGREGATION_CODE                                      AS code,
                                                        TITLE                                                 AS title,
                                                        (SELECT CODE_NAME
                                                         FROM AD_CODE_DETAIL
                                                         WHERE CODE_DETAIL_UUID = Z1.TYPE_UUID)               AS "type",
                                                        (SELECT LEVEL_NAME
                                                         FROM RC_LEVEL
                                                         WHERE LEVEL_UUID = Z1.LEVEL_UUID)                    AS "level",
                                                        AUTHOR                                                AS author,
                                                        DESCRIPTION_START_DATE                                AS descStrDate,
                                                        DESCRIPTION_END_DATE                                  AS descEdDate,
                                                        DESCRIPTION                                           AS description,
                                                        NOTES                                                 AS notes,
                                                        ((SELECT COUNT(*)
                                                        FROM RC_AGGREGATION
                                                        WHERE PARENT_AGGREGATION_UUID = Z1.AGGREGATION_UUID)
                                                        + (SELECT COUNT(*)
                                                           FROM RC_ITEM
                                                          WHERE AGGREGATION_UUID = Z1.AGGREGATION_UUID)) as childCnt
                                              FROM RC_AGGREGATION Z1
                                            UNION ALL SELECT
                                                                ITEM_UUID as uuid,
                                                                2 as orderNo,
                                                                (SELECT CODE_NAME
                                                                FROM AD_CODE_DETAIL
                                                                WHERE CODE_DETAIL_UUID = Z1.PUBLISHED_STATUS_UUID) as publishedStatus,
                                                                ITEM_CODE as code,
                                                                TITLE as title,
                                                                (SELECT CODE_NAME
                                                                FROM AD_CODE_DETAIL
                                                                WHERE CODE_DETAIL_UUID = Z1.TYPE_UUID ) as "type",
                                                                '' as "level",
                                                                AUTHOR as author,
                                                                DESCRIPTION_START_DATE as descStrDate,
                                                                DESCRIPTION_END_DATE as descEdDate,
                                                                DESCRIPTION as description,
                                                                NOTES as notes,
                                                                0 as childCnt
                                                          FROM RC_ITEM Z1
                      ) B on B.UUID = record_result.AGGREGATION_UUID
            <where>
                1=1
                <if test="code != null">
                    AND B.code  LIKE '%' || #{code} || '%'
                </if>
                <if test="title != null">
                    AND B.title  LIKE '%' || #{title} || '%'
                </if>
           </where>
            -- group by 를 해줘야 같은데이터가 겹치지 않음
            group by record_result.TAKEOUT_REQUEST_UUID
            )
            request_sub
            ON request_sub.TAKEOUT_REQUEST_UUID =
            request.
            TAKEOUT_REQUEST_UUID
        </if>
                    <where>
                        1=1
                        <if test="requestorUuid != null">
                            AND request.REQUESTOR_UUID  = #{requestorUuid}
                        </if>
                        <if test="takeoutDateFrom != null">
                            AND
                            TO_DATE(TO_CHAR(request.TAKEOUT_DATE,'yyyy-mm-dd'), 'yyyy-mm-dd') <![CDATA[>=]]> TO_DATE(#{takeoutDateFrom},'yyyy-mm-dd')
                        </if>
                        <if test="takeoutDateTo != null">
                            AND TO_DATE(TO_CHAR(request.TAKEOUT_DATE, 'yyyy-mm-dd'), 'yyyy-mm-dd') <![CDATA[<]]> TO_DATE(#{takeoutDateTo},'yyyy-mm-dd')+1
                        </if>
                        <if test="returnDueDateFrom != null">
                            AND TO_DATE(TO_CHAR(request.RETURN_DUE_DATE, 'yyyy-mm-dd'), 'yyyy-mm-dd') <![CDATA[>=]]> TO_DATE(#{returnDueDateFrom},'yyyy-mm-dd')
                        </if>
                        <if test="returnDueDateTo != null">
                            AND TO_DATE(TO_CHAR(request.RETURN_DUE_DATE, 'yyyy-mm-dd'), 'yyyy-mm-dd') <![CDATA[<]]> TO_DATE(#{returnDueDateTo},'yyyy-mm-dd')+1
                        </if>
                    </where>
                    ORDER BY request.INSERT_DATE DESC
            ) tab
    WHERE
            tab.requestorName LIKE  CASE  WHEN AUTH_NAME = 'ADMIN'  THEN requestorName
                                            ELSE '%'||'%' END
        AND requestorUuid = CASE WHEN AUTH_NAME = 'USER' THEN #{currentLoginUserUuid}
                                  ELSE requestorUuid  END
        <if test="requestorName != null">
            AND tab.requestorName LIKE '%'||#{requestorName}||'%'
        </if>
    </select>
    <select id="getStTakeoutRecordResult" resultType="St00802VO" statementType="PREPARED">
        -- 여기는 위의 getStTakeoutRequest query 와 같으므로 아래 변경되면 똑같이 적용 해 줘야됨
        -- code, title 이 필터링 되어야해서 이렇게 됨
        select
               TAKEOUT_RECORD_RESULT_UUID takeoutRecordResultUuid,
               TAKEOUT_REQUEST_UUID takeoutRequestUuid,
               record_result.AGGREGATION_UUID aggregationUuid,
               B.code,
               B.title,
               B."level",
               B."type",
               B.publishedStatus,
               B.author,
               -- B.descStrDate descStrDate,
               -- B.descEdDate descEdDate,
                c.creation_start_date   as descStrDate,
                c.creation_end_date     as descEdDate,
               repository.REPOSITORY_NAME repositoryName, -- 서고
               shelf.SHELF_NAME shelfName, -- 서가
               (location.ROW_NO || '행 ' || location.COLUMN_NO || '열') as locationName, -- 행렬단
               container.CONTAINER_NAME as containerName

        FROM ST_TAKEOUT_RECORD_RESULT record_result
                  LEFT JOIN RC_AGGREGATION_CON c ON record_result.aggregation_uuid = c.aggregation_uuid
                  LEFT JOIN
                      ST_ARRANGE_RECORDS_RESULT etc
                  ON etc.AGGREGATION_UUID = record_result.AGGREGATION_UUID
                  LEFT JOIN ST_ARRANGE_CONTAINERS_RESULT acr
                    ON acr.CONTAINER_UUID = etc.CONTAINER_UUID
                  LEFT JOIN ST_LOCATION location
                    ON location.LOCATION_UUID = acr.LOCATION_UUID
                  LEFT JOIN ST_CONTAINER container
                    ON container.CONTAINER_UUID = etc.CONTAINER_UUID
                  LEFT JOIN ST_SHELF shelf
                    ON shelf.SHELF_UUID = location.SHELF_UUID
                  LEFT JOIN ST_REPOSITORY repository
                    ON repository.REPOSITORY_UUID = shelf.REPOSITORY_UUID
                  INNER JOIN (SELECT AGGREGATION_UUID                                                                         as uuid,
                                     1                                                                                        as orderNo,
                                     (SELECT CODE_NAME
                                      FROM AD_CODE_DETAIL
                                      WHERE CODE_DETAIL_UUID = Z1.PUBLISHED_STATUS_UUID)                                      as publishedStatus,
                                     AGGREGATION_CODE                                                                         as code,
                                     TITLE                                                                                    as title,
                                     (SELECT CODE_NAME
                                      FROM AD_CODE_DETAIL
                                      WHERE CODE_DETAIL_UUID = Z1.TYPE_UUID)                                                  as "type",
                                     (SELECT LEVEL_NAME
                                      FROM RC_LEVEL
                                      WHERE LEVEL_UUID = Z1.LEVEL_UUID)                                                       as "level",
                                     AUTHOR                                                                                   as author,
                                     DESCRIPTION_START_DATE                                                                   as descStrDate,
                                     DESCRIPTION_END_DATE                                                                     as descEdDate,
                                     DESCRIPTION                                                                              as description,
                                     NOTES                                                                                    as notes,
                                     ((SELECT COUNT(*) FROM RC_AGGREGATION WHERE PARENT_AGGREGATION_UUID = Z1.AGGREGATION_UUID) +
                                      (SELECT COUNT(*)
                                       FROM RC_ITEM
                                       WHERE AGGREGATION_UUID = Z1.AGGREGATION_UUID))                                         as childCnt
                              FROM RC_AGGREGATION Z1
                              UNION ALL SELECT ITEM_UUID                                                                    as uuid,
                                               2                                                                            as orderNo,
                                               (SELECT CODE_NAME
                                                FROM AD_CODE_DETAIL
                                                WHERE CODE_DETAIL_UUID = Z1.PUBLISHED_STATUS_UUID)                          as publishedStatus,
                                               ITEM_CODE                                                                    as code,
                                               TITLE                                                                        as title,
                                               (SELECT CODE_NAME
                                                FROM AD_CODE_DETAIL
                                                WHERE CODE_DETAIL_UUID = Z1.TYPE_UUID)                                      as "type",
                                               ''                                                                           as "level",
                                               AUTHOR                                                                       as author,
                                               DESCRIPTION_START_DATE                                                       as descStrDate,
                                               DESCRIPTION_END_DATE                                                         as descEdDate,
                                               DESCRIPTION                                                                  as description,
                                               NOTES                                                                        as notes,
                                               0                                                                            as childCnt
                                        FROM RC_ITEM Z1) B on B.UUID = record_result.AGGREGATION_UUID
        <where>
            1=1
            AND record_result.TAKEOUT_REQUEST_UUID = #{takeoutRequestUuid}
            <if test="code != null">
                   AND B.code  LIKE '%' || #{code} || '%'
            </if>
            <if test="title != null">
                   AND B.title  LIKE '%' || #{title} || '%'
            </if>
        </where>

     </select>
</mapper>
