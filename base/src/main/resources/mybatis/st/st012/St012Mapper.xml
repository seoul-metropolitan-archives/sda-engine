<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rmsoft.ams.seoul.st.st012.dao.St012Mapper">
    <select id="getStWithoutNoticeInoutHistResult" resultType="St01201VO" parameterType="St01201VO" statementType="PREPARED">
        SELECT inout_record.AGGREGATION_UUID,
               inout_record.WITHOUT_NOTICE_IO_RECORD_UUID,
               B.code,
               B.title,
               B."level",
               B."type",
               B.publishedStatus,
               B.author,
               B.descStrDate,
               B.descEdDate,
               repository.REPOSITORY_NAME,
               shelf.SHELF_NAME,
               (location.ROW_NO || '행 ' || location.COLUMN_NO || '열') as locationName
        FROM ST_WITHOUT_NOTICE_INOUT_RECORD inout_record
          INNER JOIN (
            SELECT ar.AGGREGATION_UUID, ar.CONTAINER_UUID    FROM RC_ITEM item
              INNER JOIN ST_ARRANGE_RECORDS_RESULT ar
                ON ar.AGGREGATION_UUID = item.AGGREGATION_UUID
            ) etc
          ON etc.AGGREGATION_UUID = inout_record.AGGREGATION_UUID
          INNER JOIN ST_ARRANGE_CONTAINERS_RESULT acr
            ON acr.CONTAINER_UUID = etc.CONTAINER_UUID
          INNER JOIN ST_LOCATION location
            ON location.LOCATION_UUID = acr.LOCATION_UUID
          INNER JOIN ST_CONTAINER container
            ON container.CONTAINER_UUID = etc.CONTAINER_UUID
          INNER JOIN ST_SHELF shelf
            ON shelf.SHELF_UUID = location.SHELF_UUID
          INNER JOIN ST_REPOSITORY repository
            ON repository.REPOSITORY_UUID = shelf.REPOSITORY_UUID
          INNER JOIN (SELECT AGGREGATION_UUID                                                                         as uuid,
                             1                                                                                        as orderNo,
                             (SELECT CODE_NAME
                              FROM AD_CODE_DETAIL
                              WHERE CODE_DETAIL_UUID = Z1.PUBLISHED_STATUS_UUID)                                      as publishedStatus,
                             AGGREGATION_CODE                                                                         as code,
                             TITLE                                                                                    as title,
                             (SELECT CODE_NAME
                              FROM AD_CODE_DETAIL
                              WHERE CODE_DETAIL_UUID = Z1.TYPE_UUID)                                                  as "type",
                             (SELECT TO_CHAR(LEVEL_NO)
                              FROM RC_LEVEL
                              WHERE LEVEL_UUID = Z1.LEVEL_UUID)                                                       as "level",
                             AUTHOR                                                                                   as author,
                             DESCRIPTION_START_DATE                                                                   as descStrDate,
                             DESCRIPTION_END_DATE                                                                     as descEdDate,
                             DESCRIPTION                                                                              as description,
                             NOTES                                                                                    as notes,
                             ((SELECT COUNT(*) FROM RC_AGGREGATION WHERE PARENT_AGGREGATION_UUID = Z1.AGGREGATION_UUID) +
                              (SELECT COUNT(*)
                               FROM RC_ITEM
                               WHERE AGGREGATION_UUID = Z1.AGGREGATION_UUID))                                         as childCnt
                      FROM RC_AGGREGATION Z1
                      UNION ALL SELECT ITEM_UUID                                                                    as uuid,
                                       2                                                                            as orderNo,
                                       (SELECT CODE_NAME
                                        FROM AD_CODE_DETAIL
                                        WHERE CODE_DETAIL_UUID = Z1.PUBLISHED_STATUS_UUID)                          as publishedStatus,
                                       ITEM_CODE                                                                    as code,
                                       TITLE                                                                        as title,
                                       (SELECT CODE_NAME
                                        FROM AD_CODE_DETAIL
                                        WHERE CODE_DETAIL_UUID = Z1.TYPE_UUID)                                      as "type",
                                       ''                                                                           as "level",
                                       AUTHOR                                                                       as author,
                                       DESCRIPTION_START_DATE                                                       as descStrDate,
                                       DESCRIPTION_END_DATE                                                         as descEdDate,
                                       DESCRIPTION                                                                  as description,
                                       NOTES                                                                        as notes,
                                       0                                                                            as childCnt
                                FROM RC_ITEM Z1) B on B.UUID = inout_record.AGGREGATION_UUID
        <where>
            1=1
            <if test="inoutExceptUuid != null">
                AND INOUT_EXCEPT_UUID = #{inoutExceptUuid}
            </if>
        </where>
    </select>

    <select id="getStInoutExcept" resultType="St01201VO" parameterType="St01201VO" statementType="PREPARED">
        SELECT
        INOUT_EXCEPT_UUID as inoutExceptUuid,
        REQUEST_NAME as requestName,
        <include refid="Common.UserName"><property name="userUuid" value="REQUESTOR_UUID"/></include> as requestorUuid,
        REQUEST_DATE as requestDate,
        EXCEPT_START_DATE as exceptStartDate,
        EXCEPT_END_DATE as exceptEndDate,
        EXCEPT_REASON as exceptReason,
        <include refid="Common.UserName"><property name="userUuid" value="INSERT_UUID"/></include> as insertUuid,
        INSERT_DATE as insertDate,
        <include refid="Common.UserName"><property name="userUuid" value="UPDATE_UUID"/></include> as updateUuid,
        UPDATE_DATE as updateDate
        FROM
        ST_INOUT_EXCEPT
        <where>
            1=1
            <if test="requestName != null">
                AND REQUEST_NAME LIKE '%' || #{requestName} || '%'
            </if>
        </where>
    </select>

    <select id="getStExceptRecordResult" resultType="St01202VO" parameterType="St01202VO" statementType="PREPARED">
        SELECT EXCEPT_RECORD_RESULT_UUID as exceptRecordResultUuid,
               INOUT_EXCEPT_UUID as inoutExceptUuid,
               AGGREGATION_UUID as aggregationUuid,
               <include refid="Common.UserName"><property name="userUuid" value="INSERT_UUID"/></include> as insertUuid,
               INSERT_DATE as insertDate,
               <include refid="Common.UserName"><property name="userUuid" value="UPDATE_UUID"/></include> as updateUuid,
               UPDATE_DATE
        FROM ST_EXCEPT_RECORD_RESULT
        <where>
            1=1
            <if test="inoutExceptUuid != null">
                AND INOUT_EXCEPT_UUID = #{inoutExceptUuid}
            </if>
        </where>

    </select>
</mapper>
