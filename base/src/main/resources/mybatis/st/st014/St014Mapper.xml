<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rmsoft.ams.seoul.st.st014.dao.St014Mapper">
    <select id="getStWithoutNoticeInoutRecord" resultType="St01401VO" parameterType="St01401VO" statementType="PREPARED">
        SELECT     tab.aggregationUuid,
                    tab.code,
                    tab.title,
                    tab."level",
                    tab."type",
                    tab.publishedstatus,
                    tab.author,
                    tab."descstrdate"                   as descStrDate,
                    tab."desceddate"                   as descEdDate,
                    tab.repositoryName,
                    tab.shelfName,
                    tab.locationName,
                    COUNT(1) as "CNT"
        FROM
        (SELECT    inout_record.aggregation_uuid               AS  aggregationUuid,
                    inout_record.without_notice_io_record_uuid  AS  withoutNoticeIoRecordUuid,
                    B.code,
                    B.title,
                    B."level",
                    B."type",
                    B.publishedstatus,
                    B.author,
                    rc.creation_start_date                      AS "descstrdate",
                    rc.creation_end_date                        AS "desceddate",--B.descstrdate,--B.desceddate,
                    repository.repository_name                  AS repositoryName,
                    shelf.shelf_name                            AS shelfName,
                    ( location.row_no || '행 ' || location.column_no || '열' ) AS locationName,
                    inout_hist.inout_date_time                  AS inoutDateTime
        FROM       st_without_notice_inout_record inout_record
                    INNER JOIN st_without_notice_inout_hist inout_hist ON inout_hist.without_notice_io_record_uuid = inout_record.without_notice_io_record_uuid
                    LEFT JOIN st_arrange_records_result     etc        ON etc.aggregation_uuid = inout_record.aggregation_uuid
                    LEFT JOIN st_arrange_containers_result  acr        ON acr.container_uuid = etc.container_uuid
                    LEFT JOIN st_location                   location   ON location.location_uuid = acr.location_uuid
                    LEFT JOIN st_container                  container  ON container.container_uuid = etc.container_uuid
                    LEFT JOIN st_shelf                      shelf      ON shelf.shelf_uuid = location.shelf_uuid
                    LEFT JOIN st_repository                 repository ON repository.repository_uuid = shelf.repository_uuid
                    LEFT JOIN RC_AGGREGATION_con            rc         ON inout_record.aggregation_uuid=rc.aggregation_uuid
                    LEFT JOIN (SELECT     Z1.aggregation_uuid             AS  uuid,
                                            1                               AS  orderNo,
                                            acd.code_name                   AS  publishedStatus,
                                            Z1.aggregation_code             AS code,
                                            Z1.title                        AS title,
                                            acd2.code_name                  AS "type",
                                            rl.level_name                   AS "level",
                                            Z1.author                       AS author,
                                            con.creation_start_date         AS descStrDate,
                                            con.creation_end_date           AS  descEdDate,
                                            Z1.description                  AS description,
                                            Z1.notes                        AS notes,
                                            ( (SELECT Count(*)
                                            FROM   rc_aggregation
                                            WHERE  parent_aggregation_uuid = Z1.aggregation_uuid)
                                            + (SELECT Count(*)
                                            FROM   rc_item
                                            WHERE  aggregation_uuid = Z1.aggregation_uuid) ) AS childCnt
                                  FROM     rc_aggregation Z1   LEFT JOIN   rc_aggregation_con CON
                                                                ON          con.aggregation_uuid = z1.aggregation_uuid
                                                                LEFT JOIN   ad_code_detail acd
                                                                ON          acd.code_detail_uuid = Z1.published_status_uuid
                                                                LEFT JOIN   ad_code_detail acd2
                                                                ON          acd2.code_detail_uuid = Z1.type_uuid
                                                                LEFT JOIN   rc_level rl
                                                                ON          rl.level_uuid = Z1.level_uuid
                                UNION ALL
                                SELECT     Z1.item_uuid                AS uuid,
                                            2                           AS orderNo,
                                            acd2.code_name              AS publishedStatus,
                                            Z1.item_code                AS code,
                                            Z1.title                    AS title,
                                            acd.code_name               AS "type",
                                            ''                         AS "level",
                                            Z1.author                   AS author,
                                            con2.creation_start_date    AS descStrDate,
                                            con2.creation_end_date      AS descEdDate,
                                            Z1.description              AS description,
                                            Z1.notes                    AS notes,
                                            0                           AS childCnt
                                FROM   rc_item Z1   LEFT JOIN   RC_AGGREGATION_CON CON2
                                                    ON          Z1.item_uuid = CON2.AGGREGATION_UUID
                                                    LEFT JOIN   ad_code_detail acd
                                                    ON          acd.code_detail_uuid = Z1.type_uuid
                                                    LEFT JOIN   ad_code_detail acd2
                                                    ON          acd2.code_detail_uuid = Z1.published_status_uuid
            ) B ON B.uuid = inout_record.aggregation_uuid
        <where>
            1=1
            AND inout_record.AGGREGATION_UUID is not null
            <if test="code != null">
                <![CDATA[
                   AND B.code  LIKE '%' || #{code} || '%'
                ]]>
            </if>
            <if test="title != null">
                <![CDATA[
                   AND B.title  LIKE '%' || #{title} || '%'
                ]]>

            </if>
            <if test="repositoryUuid != null">
                AND  repository.REPOSITORY_UUID = #{repositoryUuid}
            </if>
            <if test="shelfUuid != null">
                AND  shelf.SHELF_UUID = #{shelfUuid}
            </if>
            <if test="inoutDateTimeFrom != null">
                AND inout_hist.INOUT_DATE_TIME <![CDATA[>=]]> TO_DATE(#{inoutDateTimeFrom},'yyyy-mm-dd')
            </if>
            <if test="inoutDateTimeTo != null">
                AND inout_hist.INOUT_DATE_TIME <![CDATA[<]]> TO_DATE(#{inoutDateTimeTo},'yyyy-mm-dd')+1
            </if>
        </where>
          ORDER BY B.code) tab

        GROUP BY    tab.aggregationUuid, tab.code, tab.title, tab."level", tab."type",
                    tab.publishedstatus, tab.author, tab."descstrdate", tab."desceddate", tab.repositoryName, tab.shelfName,
                    tab.locationName
        ORDER BY tab.code
    </select>

    <select id="getStWithoutNoticeInoutHist" resultType="St01402VO" parameterType="St01402VO" statementType="PREPARED">
        SELECT
          hist.WITHOUT_NOTICE_IO_RECORD_UUID,
          hist.INOUT_DATE_TIME    AS inoutDateTime,
          gate.gate_name          AS gateName,
          hist.INOUT_TYPE_UUID    AS inoutTypeUuid,
          hist.without_notice_yn  AS withoutNoticeYn,
          record.reason           AS reason,
          usr.user_name           AS disposerName--gate.ZONE_NAME zoneName,

        FROM
          ST_WITHOUT_NOTICE_INOUT_HIST hist
            LEFT JOIN
              ST_WITHOUT_NOTICE_INOUT_RECORD record
              ON hist.WITHOUT_NOTICE_IO_RECORD_UUID = record.WITHOUT_NOTICE_IO_RECORD_UUID
            LEFT JOIN
              AC_USER usr
              ON record.DISPOSER_UUID = usr.USER_UUID
            INNER JOIN
          (
            SELECT * FROM ST_GATE gate
              INNER JOIN ST_ZONE zone
                ON gate.OUT_ZONE_UUID = zone.ZONE_UUID
          ) gate
          ON hist.GATE_UUID = gate.GATE_UUID
        WHERE 1 = 1
          AND record.aggregation_uuid = #{aggregationUuid}
        ORDER BY hist.INOUT_DATE_TIME DESC
    </select>
</mapper>
