<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rmsoft.ams.seoul.st.st002.dao.St002Mapper">
    <select id="getContainerHierarchyList" resultType="St00201VO"  statementType="PREPARED">
        SELECT
            CONTAINER_UUID as containerUuid,
            CONTAINER_TYPE_UUID as containerTypeUuid,
            STATUS_UUID as statusUuid,
            PARENT_CONTAINER_UUID as parentContainerUuid,
            CONTAINER_NAME as containerName,
             '[' || FC_AD_CODE_NM(CONTAINER_TYPE_UUID) || '] ' || CONTAINER_NAME as containerTreeName,
            ORDER_NO as orderNo,
            ORDER_KEY as orderKey,
            SUBSTR(SYS_CONNECT_BY_PATH(ROWNUM, '.'), 2 , length(SYS_CONNECT_BY_PATH(ROWNUM, '.'))) as orderKey1,
            CONNECT_BY_ISLEAF LEAF
        FROM
            ST_CONTAINER A
            START WITH PARENT_CONTAINER_UUID IS NULL
        CONNECT BY PRIOR CONTAINER_UUID = PARENT_CONTAINER_UUID
        ORDER SIBLINGS BY ORDER_KEY
    </select>
    <select id="getContainerList" resultType="St00201VO" parameterType="St00201VO" statementType="PREPARED">
        SELECT
        A.CONTAINER_UUID as containerUuid,
        A.STATUS_UUID as statusUuid,
        A.CONTAINER_NAME as containerName,
        A.CONTAINER_TYPE_UUID as containerTypeUuid,
        A.PARENT_CONTAINER_UUID as parentContainerUuid,
        A.CONTROL_NUMBER as controlNumber,
        A.PROVENANCE as provenance,
        TO_CHAR(TO_DATE(A.CREATION_START_DATE),'YYYY-MM-DD') as creationStartDate,
        TO_CHAR(TO_DATE(A.CREATION_END_DATE),'YYYY-MM-DD') as creationEndDate,
        (SELECT CONTAINER_NAME
        FROM ST_CONTAINER I
        WHERE I.CONTAINER_UUID = A.PARENT_CONTAINER_UUID) parentContainerName,
        A.ORDER_NO as orderNo,
        A.ORDER_KEY as orderKey,
        A.USE_YN as useYn,
        A.DESCRIPTION as description,
        A.NOTES as notes,
        <include refid="Common.UserName"><property name="userUuid" value="INSERT_UUID"/></include> as insertUuid,
        A.INSERT_DATE as insertDate,
        <include refid="Common.UserName"><property name="userUuid" value="UPDATE_UUID"/></include> as updateUuid,
        A.UPDATE_DATE as updateDate,
        (SELECT COUNT(*)
        FROM ST_ARRANGE_RECORDS_RESULT STARR
        WHERE STARR.CONTAINER_UUID = A.CONTAINER_UUID) as recordCount,
        STR.REPOSITORY_NAME AS repositoryName,
        STS.SHELF_NAME AS shelfName,
        NVL2(STL.ROW_NO, STL.ROW_NO || '행 ' || STL.COLUMN_NO || '열', '' ) as locationName
        FROM ST_CONTAINER A LEFT OUTER JOIN  ST_ARRANGE_CONTAINERS_RESULT STACR2
        ON A.CONTAINER_UUID = STACR2.CONTAINER_UUID
        LEFT OUTER JOIN ST_LOCATION STL
        ON STACR2.LOCATION_UUID = STL.LOCATION_UUID
        LEFT OUTER JOIN ST_SHELF STS
        ON STL.SHELF_UUID = STS.SHELF_UUID
        LEFT OUTER JOIN ST_REPOSITORY STR
        ON STS.REPOSITORY_UUID = STR.REPOSITORY_UUID
        <where>
            <if test="provenance != null">
                A.PROVENANCE = #{provenance}
            </if>
            <if test="parentContainerUuid != null">
                AND A.PARENT_CONTAINER_UUID = #{parentContainerUuid}
            </if>
            <if test="containerName != null">
                AND UPPER(A.CONTAINER_NAME) LIKE '%'||#{containerName}||'%'
            </if>
            <if test="statusUuid != null">
                AND A.STATUS_UUID = #{statusUuid}
            </if>
            <if test="controlNumber != null">
                AND A.CONTROL_NUMBER = #{controlNumber}
            </if>
            <if test="containerTypeUuid != null">
                AND A.CONTAINER_TYPE_UUID = #{containerTypeUuid}
            </if>
            <if test="useYn != null">
                AND A.USE_YN = #{useYn}
            </if>
        </where>
        ORDER BY CONTAINER_NAME
    </select>
    <select id="getSelectedContainerList" resultType="St00201VO" parameterType="St00201VO" statementType="PREPARED">
        SELECT
        containerUuid,
        statusUuid,
        containerName,
        containerTypeUuid,
        parentContainerUuid,
        controlNumber,
        provenance,
        creationStartDate,
        creationEndDate,
        orderKey,
        orderKey1,
        orderNo,
        parentContainerName,
        useYn,
        notes,
        description,
        insertUuid,
        insertDate,
        updateUuid,
        updateDate,
        recordCount,
        repositoryName,
        shelfName,
        locationName
        FROM
        (
            SELECT
                A.CONTAINER_UUID as containerUuid,
                A.STATUS_UUID as statusUuid,
                A.CONTAINER_NAME as containerName,
                A.CONTAINER_TYPE_UUID as containerTypeUuid,
                A.PARENT_CONTAINER_UUID as parentContainerUuid,
                A.CONTROL_NUMBER as controlNumber,
                A.PROVENANCE as provenance,
                TO_CHAR(TO_DATE(A.CREATION_START_DATE),'YYYY-MM-DD') as creationStartDate,
                TO_CHAR(TO_DATE(A.CREATION_END_DATE),'YYYY-MM-DD') as creationEndDate,
                SUBSTR(SYS_CONNECT_BY_PATH(ROWNUM, '.'), 2 , length(SYS_CONNECT_BY_PATH(ROWNUM, '.'))) as orderKey1,
                (
                  SELECT CONTAINER_NAME
                  FROM ST_CONTAINER I
                  WHERE I.CONTAINER_UUID = A.PARENT_CONTAINER_UUID
                ) parentContainerName,
                A.ORDER_NO as orderNo,
                A.ORDER_KEY as orderKey,
                A.USE_YN as useYn,
                A.DESCRIPTION as description,
                A.NOTES as notes,
                <include refid="Common.UserName"><property name="userUuid" value="INSERT_UUID"/></include> as insertUuid,
                A.INSERT_DATE as insertDate,
                <include refid="Common.UserName"><property name="userUuid" value="UPDATE_UUID"/></include> as updateUuid,
                A.UPDATE_DATE as updateDate,
                (SELECT COUNT(*)
                FROM ST_ARRANGE_RECORDS_RESULT STARR
                WHERE STARR.CONTAINER_UUID = A.CONTAINER_UUID) as recordCount,
                (
                SELECT STR.REPOSITORY_NAME
                FROM ST_REPOSITORY STR INNER JOIN ST_SHELF STS
                ON STR.REPOSITORY_UUID = STS.REPOSITORY_UUID
                INNER JOIN ST_LOCATION STL
                ON STS.SHELF_UUID = STL.SHELF_UUID
                INNER JOIN ST_ARRANGE_CONTAINERS_RESULT STARCR
                ON STL.LOCATION_UUID = STARCR.LOCATION_UUID
                WHERE STARCR.CONTAINER_UUID = A.CONTAINER_UUID
                ) as repositoryName,
                (
                SELECT STS.SHELF_NAME
                FROM ST_REPOSITORY STR INNER JOIN ST_SHELF STS
                ON STR.REPOSITORY_UUID = STS.REPOSITORY_UUID
                INNER JOIN ST_LOCATION STL
                ON STS.SHELF_UUID = STL.SHELF_UUID
                INNER JOIN ST_ARRANGE_CONTAINERS_RESULT STARCR
                ON STL.LOCATION_UUID = STARCR.LOCATION_UUID
                WHERE STARCR.CONTAINER_UUID = A.CONTAINER_UUID
                ) as shelfName,
                (
                SELECT NVL2(STL.ROW_NO, STL.ROW_NO || '행 ' || STL.COLUMN_NO || '열','')
                FROM ST_REPOSITORY STR INNER JOIN ST_SHELF STS
                ON STR.REPOSITORY_UUID = STS.REPOSITORY_UUID
                INNER JOIN ST_LOCATION STL
                ON STS.SHELF_UUID = STL.SHELF_UUID
                INNER JOIN ST_ARRANGE_CONTAINERS_RESULT STARCR
                ON STL.LOCATION_UUID = STARCR.LOCATION_UUID
                WHERE STARCR.CONTAINER_UUID = A.CONTAINER_UUID
                ) as locationName
            FROM
                ST_CONTAINER A
            START WITH A.PARENT_CONTAINER_UUID IS NULL
            CONNECT BY PRIOR A.CONTAINER_UUID = A.PARENT_CONTAINER_UUID
            ORDER SIBLINGS BY ORDER_KEY
        )

        <where>
            <if test="orderKey1 != null">
                (orderKey1 LIKE  #{orderKey1} || '.' || '%'
                OR orderKey1 =  #{orderKey1})
            </if>
            <if test="provenance != null">
                provenance = #{provenance}
            </if>
            <if test="parentContainerUuid != null">
                AND  parentContainerUuid = #{parentContainerUuid}
            </if>
            <if test="containerName != null">
                AND UPPER(containerName) LIKE '%'||#{containerName}||'%'
            </if>
            <if test="statusUuid != null">
                AND statusUuid = #{statusUuid}
            </if>
            <if test="controlNumber != null">
                AND controlNumber = #{controlNumber}
            </if>
            <if test="containerTypeUuid != null">
                AND containerTypeUuid = #{containerTypeUuid}
            </if>
            <if test="useYn != null">
                AND useYn = #{useYn}
            </if>
        </where>
    </select>
</mapper>