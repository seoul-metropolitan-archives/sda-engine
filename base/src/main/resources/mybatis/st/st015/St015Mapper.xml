<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rmsoft.ams.seoul.st.st015.dao.St015Mapper">
    <select id="getStInventoryPlan" resultType="St01501VO" parameterType="St01501VO" statementType="PREPARED">
        select a.INVENTORY_PLAN_UUID as inventoryPlanUuid,
               a.PLAN_NAME as planName,
               a.PLANNER_UUID as plannerUuid,
               <include refid="Common.UserName"><property name="userUuid" value="PLANNER_UUID"/></include> as plannerName,
               TO_CHAR(a.EXCEPT_START_DATE,'YYYY-MM-DD') as exceptStartDate,
               TO_CHAR(a.EXCEPT_END_DATE,'YYYY-MM-DD') as exceptEndDate,
               a.REPOSITORY_UUID as repositoryUuid,
               b.REPOSITORY_NAME as repositoryName,
               a.SHELF_UUID as shelfUuid,
               c.SHELF_NAME as shelfName,
               a.LOCATION_UUID as locationUuid,
               a.STATUS_UUID as statusUuid,
               FC_AD_CODE_NM(a.STATUS_UUID) as statusName,
               a.PLAN_RESULT_UUID as planResultUuid,
               FC_AD_CODE_NM(a.PLAN_RESULT_UUID) as planResultName,
               a.NOTES as notes,
               a.EXCEPT_REASON as exceptReason,
               NVL2(d.ROW_NO, d.ROW_NO || '행 ' || d.COLUMN_NO || '열' ,'') as locationName
          from ST_INVENTORY_PLAN a left outer join ST_REPOSITORY b
            ON a.REPOSITORY_UUID = b.REPOSITORY_UUID
            left outer join ST_SHELF c
            ON a.SHELF_UUID = C.SHELF_UUID
            left outer join ST_LOCATION d
            ON a.LOCATION_UUID = d.LOCATION_UUID
        <where>
            1=1
            <if test="code != null">
                AND EXISTS(
                SELECT *
                FROM ST_INVENTORY_RECORD_RESULT STIRR INNER JOIN RC_AGGREGATION RCA
                ON STIRR.AGGREGATION_UUID = RCA.AGGREGATION_UUID
                WHERE STIRR.INVENTORY_PLAN_UUID = a.INVENTORY_PLAN_UUID
                AND RCA.AGGREGATION_CODE LIKE '%' || #{code} || '%'
                )
            </if>
            <if test="title != null">
                AND EXISTS(
                SELECT *
                FROM ST_INVENTORY_RECORD_RESULT STIRR INNER JOIN RC_AGGREGATION RCA
                ON STIRR.AGGREGATION_UUID = RCA.AGGREGATION_UUID
                WHERE STIRR.INVENTORY_PLAN_UUID = a.INVENTORY_PLAN_UUID
                AND RCA.TITLE LIKE '%' || #{title} || '%'
                )
            </if>
           <!-- <if test="code != null || title != null">
                AND EXISTS(
                SELECT *
                FROM ST_INVENTORY_RECORD_RESULT STIRR INNER JOIN RC_AGGREGATION RCA
                ON STIRR.AGGREGATION_UUID = RCA.AGGREGATION_UUID
                WHERE STIRR.INVENTORY_PLAN_UUID = a.INVENTORY_PLAN_UUID
                AND RCA.AGGREGATION_CODE LIKE '%' || #{code} || '%'
                AND RCA.TITLE LIKE '%' || #{title} || '%'
                )
            </if>-->
            <if test="planName != null">
                AND PLAN_NAME LIKE '%' || #{planName} || '%'
            </if>
            <if test="plannerUuid != null">
                AND a.PLANNER_UUID  = #{plannerUuid}
            </if>
            <!--<if test="exceptStartDate != null">
                AND a.EXCEPT_START_DATE <![CDATA[>=]]> TO_DATE(#{exceptStartDate},'yyyy-mm-dd')
            </if>
            <if test="exceptEndDate != null">
                AND a.EXCEPT_END_DATE <![CDATA[<]]> TO_DATE(#{exceptEndDate},'yyyy-mm-dd')+1
            </if>-->

            <if test="exceptStartDateFrom != null">
                AND TO_DATE(TO_CHAR(a.EXCEPT_START_DATE, 'yyyy-mm-dd'), 'yyyy-mm-dd') <![CDATA[>=]]> TO_DATE(#{exceptStartDateFrom},'yyyy-mm-dd')
            </if>
            <if test="exceptStartDateTo != null">
                AND TO_DATE(TO_CHAR(a.EXCEPT_START_DATE, 'yyyy-mm-dd'), 'yyyy-mm-dd') <![CDATA[<]]> TO_DATE(#{exceptStartDateTo},'yyyy-mm-dd')+1
            </if>
            <if test="exceptEndDateFrom != null">
                AND TO_DATE(TO_CHAR(a.EXCEPT_END_DATE, 'yyyy-mm-dd'), 'yyyy-mm-dd') <![CDATA[>=]]> TO_DATE(#{exceptEndDateFrom},'yyyy-mm-dd')
            </if>
            <if test="exceptEndDateTo != null">
                AND TO_DATE(TO_CHAR(a.EXCEPT_END_DATE, 'yyyy-mm-dd'), 'yyyy-mm-dd') <![CDATA[<]]> TO_DATE(#{exceptEndDateTo},'yyyy-mm-dd')+1
            </if>


            <if test="repositoryUuid != null">
                AND a.REPOSITORY_UUID  = #{repositoryUuid}
            </if>
            <if test="shelfUuid != null">
                AND a.SHELF_UUID  = #{shelfUuid}
            </if>
        </where>
        ORDER BY a.EXCEPT_START_DATE DESC

    </select>

    <select id="getStInventoryContainerResult" resultType="St01502VO" parameterType="St01502VO" statementType="PREPARED">
        select a.INVENTORY_CONT_RESULT_UUID as inventoryContResultUuid,
               a.INVENTORY_PLAN_UUID as inventoryPlanUuid,
               a.CONTAINER_UUID as containerUuid,
               a.INVENTORY_RESULT_UUID as inventoryResultUuid,
               a.CONTAINER_STATUS_UUID as containerStatusUuid,
               S.CONTAINER_NAME as containerName,
               (SELECT CONTAINER_NAME
                FROM ST_CONTAINER I
                WHERE I.CONTAINER_UUID = S.PARENT_CONTAINER_UUID) parentContainerName,
               S.CONTAINER_TYPE_UUID as containerTypeUuid,
               S.CONTROL_NUMBER as controlNumber,
                (SELECT (STL.ROW_NO || '행 ' || STL.COLUMN_NO || '열')
                FROM ST_LOCATION STL INNER JOIN ST_ARRANGE_CONTAINERS_RESULT STARCR
                ON STL.LOCATION_UUID = STARCR.LOCATION_UUID
                WHERE STARCR.CONTAINER_UUID = a.CONTAINER_UUID ) as locationName
        from ST_INVENTORY_CONTAINER_RESULT a INNER JOIN ST_CONTAINER S
        ON a.CONTAINER_UUID = S.CONTAINER_UUID
        <where>
            1=1
            <if test="inventoryPlanUuid != null">
                AND A.INVENTORY_PLAN_UUID = #{inventoryPlanUuid}
            </if>
        </where>
        ORDER BY locationName, CONTAINER_NAME
    </select>

    <select id="getStInventoryRecordResult" resultType="St01503VO" parameterType="St01503VO" statementType="PREPARED">
        SELECT A.INVENTORY_RECORD_RESULT_UUID as inventoryRecordResultUuid,
       A.INVENTORY_PLAN_UUID         as inventoryPlanUuid,
       A.CONTAINER_UUID          as containerUuid,
       A.AGGREGATION_UUID as aggregationUuid,
       A.WORKER_UUID as workerUuid,
       usr.user_name                            AS workerName,
       TO_CHAR(A.INVENTORY_DATE, 'yyyy-mm-dd') AS inventoryDate,
       A.INVENTORY_RESULT_UUID as inventoryResultUuid,
        FC_AD_CODE_NM(A.TAG_STATUS_UUID) as tagStatusUuid,
       A.RECORD_STATUS_UUID as recordStatusUuid,
       B.uuid,
       B.orderNo,
       B.publishedStatus,
       B.code,
       B.title,
       B."type",
       B."level",
       B.author,
       B.descStrDate,
       B.descEdDate,
       B.description,
       B.notes,
       SR.REPOSITORY_NAME as repositoryName,
       SS.SHELF_NAME as shelfName,
       NVL2(SL.ROW_NO,SL.ROW_NO || '행 ' || SL.COLUMN_NO || '열' ,'') as locationName
FROM ST_INVENTORY_RECORD_RESULT A LEFT OUTER JOIN ST_ARRANGE_RECORDS_RESULT SARR
         ON A.AGGREGATION_UUID = SARR.AGGREGATION_UUID
                                LEFT OUTER JOIN ST_ARRANGE_CONTAINERS_RESULT SACR
         ON SARR.CONTAINER_UUID = SACR.CONTAINER_UUID
                                LEFT OUTER JOIN ST_LOCATION SL
         ON SL.LOCATION_UUID = SACR.LOCATION_UUID
                                LEFT OUTER JOIN ST_SHELF SS
         ON SS.SHELF_UUID = SL.SHELF_UUID
                                LEFT OUTER JOIN ST_REPOSITORY SR
         ON SR.REPOSITORY_UUID = SS.REPOSITORY_UUID
                                INNER JOIN (SELECT AGGREGATION_UUID                                                                         as uuid,
                                                   1                                                                                        as orderNo,
                                                   (SELECT CODE_NAME
                                                    FROM AD_CODE_DETAIL
                                                    WHERE CODE_DETAIL_UUID = Z1.PUBLISHED_STATUS_UUID)                                      as publishedStatus,
                                                   AGGREGATION_CODE                                                                         as code,
                                                   TITLE                                                                                    as title,
                                                   (SELECT CODE_NAME
                                                    FROM AD_CODE_DETAIL
                                                    WHERE CODE_DETAIL_UUID = Z1.TYPE_UUID)                                                  as "type",
                                                   (SELECT LEVEL_NAME
                                                    FROM RC_LEVEL
                                                    WHERE LEVEL_UUID = Z1.LEVEL_UUID)                                                       as "level",
                                                   AUTHOR                                                                                   as author,
                                                   DESCRIPTION_START_DATE                                                                   as descStrDate,
                                                   DESCRIPTION_END_DATE                                                                     as descEdDate,
                                                   DESCRIPTION                                                                              as description,
                                                   NOTES                                                                                    as notes,
                                                   ((SELECT COUNT(*) FROM RC_AGGREGATION WHERE PARENT_AGGREGATION_UUID = Z1.AGGREGATION_UUID) +
                                                    (SELECT COUNT(*)
                                                     FROM RC_ITEM
                                                     WHERE AGGREGATION_UUID = Z1.AGGREGATION_UUID))                                         as childCnt
                                            FROM RC_AGGREGATION Z1
                                            UNION
                                            ALL SELECT ITEM_UUID                                                                    as uuid,
                                                       2                                                                            as orderNo,
                                                       (SELECT CODE_NAME
                                                        FROM AD_CODE_DETAIL
                                                        WHERE CODE_DETAIL_UUID = Z1.PUBLISHED_STATUS_UUID)                          as publishedStatus,
                                                       ITEM_CODE                                                                    as code,
                                                       TITLE                                                                        as title,
                                                       (SELECT CODE_NAME FROM AD_CODE_DETAIL WHERE CODE_DETAIL_UUID = Z1.TYPE_UUID) as "type",
                                                       ''                                                                           as "level",
                                                       AUTHOR                                                                       as author,
                                                       DESCRIPTION_START_DATE                                                       as descStrDate,
                                                       DESCRIPTION_END_DATE                                                         as descEdDate,
                                                       DESCRIPTION                                                                  as description,
                                                       NOTES                                                                        as notes,
                                                       0                                                                            as childCnt
                                                FROM RC_ITEM Z1) B on A.AGGREGATION_UUID = B.uuid
                        LEFT JOIN AC_USER usr ON a.worker_uuid = usr.user_uuid
        <where>
            1=1
            <if test="inventoryPlanUuid != null">
                AND A.INVENTORY_PLAN_UUID = #{inventoryPlanUuid}
            </if>
            <if test="containerUuid != null">
                AND A.CONTAINER_UUID = #{containerUuid}
            </if>

        </where>
    </select>
</mapper>
