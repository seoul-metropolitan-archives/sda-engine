<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2017. RMSoft Co.,Ltd. All rights reserved
  -->

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rmsoft.ams.seoul.ac.ac007.dao.Ac007Mapper">
    <select id="findAllRole" resultType="Ac00701VO" parameterType="Ac00701VO" statementType="PREPARED">
        SELECT
            Z.ROLE_UUID as roleUuid,
            Z.ROLE_NAME as roleName,
            Z.DESCRIPTION description,
            Z.NOTES notes,
            Z.USE_YN useYn,
            <include refid="Common.UserName">
                <property name="userUuid" value="Z.INSERT_UUID"/>
            </include>
            as insertUuid,
            Z.INSERT_DATE as insertDate,
            <include refid="Common.UserName">
                <property name="userUuid" value="Z.UPDATE_UUID"/>
            </include>
            as updateUuid,
            Z.UPDATE_DATE as updateDate
        FROM
            AC_ROLE Z
        <where>
            <if test="roleName != null">
                Z.ROLE_NAME LIKE '%' || #{roleName} || '%'
            </if>
            <if test="useYn != null">
                AND Z.USE_YN = #{useYn}
            </if>
        </where>
    </select>
    <select id="findRoleMenu" resultType="Ac00702VO" parameterType="String"
            statementType="PREPARED">
        SELECT
            Z1.ROLE_MENU_UUID as roleMenuUuid,
            #{roleUuid} as roleUuid,
            Z2.MENU_UUID as menuUuid,
            Z2.PARENT_MENU_CODE as parentMenuCode,
            REPLACE(Z2.MENU_CODE, '-','.') as menuCode,
            Z2.MENU_NAME as menuName,
            Z2.PROGRAM_UUID as programUuid,
            Z2.PARAMETER as parameter,
            CASE WHEN NVL(Z1.USE_YN,'N') = 'Y' AND NVL(Z1.SAVE_YN,'N') ='Y' AND NVL(Z1.INQUIRY_YN,'N') ='Y'
                  THEN 'Y'
                  ELSE 'N'
            END as allYn,
            NVL(Z1.USE_YN,'N') as useYn,
            NVL(Z1.SAVE_YN,'N') as saveYn,
            NVL(Z1.INQUIRY_YN,'N') as inquiryYn,
            Z1.DESCRIPTION as description,
            Z1.NOTES as notes,
            <include refid="Common.UserName">
                <property name="userUuid" value="Z1.INSERT_UUID"/>
            </include>
            as insertUuid,
            Z1.INSERT_DATE insertDate,
            <include refid="Common.UserName">
                <property name="userUuid" value="Z1.UPDATE_UUID"/>
            </include>
            as updateUuid,
            Z1.UPDATE_DATE updateDate
        FROM
            AC_ROLE_MENU Z1,
            AD_MENU Z2
        WHERE Z1.MENU_UUID(+) = Z2.MENU_UUID
          AND Z1.ROLE_UUID(+) = #{roleUuid}
        ORDER BY Z2.MENU_CODE
    </select>
    <select id="findPermission" resultType="Ac00703VO" parameterType="String"
            statementType="PREPARED">
        SELECT
            Z1.PERMISSION_UUID as permissionUuid,
            Z1.PERMISSION_NAME as permissionName,
            Z1.PMS_PROGRAM_UUID as pmsProgramUuid,
            (SELECT PROGRAM_NAME FROM AD_PROGRAM WHERE PROGRAM_UUID = Z1.PMS_PROGRAM_UUID) as programName,
            Z1.PMS_ENTITY_TYPE_UUID as pmsEntityTypeUuid,
            (SELECT ENTITY_TYPE_NAME FROM AD_ENTITY_TYPE WHERE ENTITY_TYPE_UUID = Z1.PMS_ENTITY_TYPE_UUID) as entityTypeName,
            Z1.PMS_FUNCTION_UUID as pmsFunctionUuid,
            Z1.DESCRIPTION as description,
            Z1.NOTES as notes,
            Z1.USE_YN as useYn,
            <include refid="Common.UserName">
                <property name="userUuid" value="Z1.INSERT_UUID"/>
            </include>
            as insertUuid,
            Z1.INSERT_DATE insertDate,
            <include refid="Common.UserName">
                <property name="userUuid" value="Z1.UPDATE_UUID"/>
            </include>
            as updateUuid,
            Z1.UPDATE_DATE updateDate
        FROM
            AC_PERMISSION Z1
        WHERE Z1.PMS_PROGRAM_UUID = #{programUuid}
    </select>
</mapper>